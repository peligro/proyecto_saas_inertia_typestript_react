version: '3.8'

services:
  app:
    build:
      context: ./docker/app
    container_name: peligro-laravel-app
    working_dir: /var/www/html
    volumes:
      - ./laravel:/var/www/html
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:K0QkoJdjC83TX5sJ76/O1XLzp5nN+G6XG8uhxdjBzQM=
    ports:
      - "8001:8000"
    networks:
      - custom_network
    

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    volumes:
      - ./laravel:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8090:80"
    depends_on:
      - app
    networks:
      - custom_network
  
  vite:
    build:
      context: .
      dockerfile: ./docker/vite/Dockerfile
    container_name: vite-dev
    working_dir: /var/www/html
    volumes:
      - ./laravel:/var/www/html
    ports:
      - "5174:5174"
    networks:
      - custom_network
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
  
  python:
    build: 
      context: ./docker/python
    container_name: python-dev
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    command: tail -f /dev/null #mantenedor el contenedor en ejecución
    ports:
      - "8070:8080"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - custom_network
  
  
  postgres:
    image: postgres:15
    container_name: laravel-postgres
    restart: always
    environment:
      POSTGRES_DB: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - custom_network

  phppgadmin:
    image: dpage/pgadmin4
    container_name: laravel-phppgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - custom_network
  
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    restart: always
    environment:
      - SERVICES=sqs,sns,lambda,ses,s3,dynamodb
      - DEFAULT_REGION=us-west-2
      - DEBUG=1
      - DATA_DIR=/tmp/localstack-data
      - TMPDIR=/tmp/localstack-custom
      - CLEAN_TMP_DIR=false
      - AWS_ACCESS_KEY_ID=fake
      - AWS_SECRET_ACCESS_KEY=fake
      - SES_DISABLE_EMAIL_VERIFICATION=1
      - DISABLE_WEB_UI=false
      - WEB_UI_ENABLED=true
      - LOCALSTACK_HOSTNAME=localhost
      - EDGE_PORT=4566
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
    ports:
      - "8000:4566"  # Puerto principal de LocalStack
      - "8085:8080"  # Interfaz web de LocalStack en el puerto 8085
    volumes:
      - "${LOCALSTACK_DATA_DIR:-./localstack-data}:/tmp/localstack-data"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - custom_network

volumes:
  pgdata:

networks:
  custom_network:
    name: custom_network # Nombre explícito para la red
    driver: bridge
    ipam:
      config:
        - subnet: 172.42.12.0/28
          gateway: 172.42.12.1